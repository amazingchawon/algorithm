# [S1] 11057 오르막 수

N = int(input())  # 입력: 숫자의 길이 N

# dp[i]는 길이가 1일 때, i로 끝나는 오르막 수의 개수
# 0~9까지 각 한 자리 수는 모두 오르막 수이므로 초기값을 1로 설정
dp = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

# 길이가 2부터 N까지 오르막 수를 계산
for i in range(1, N):
    tmp = [0] * 10  # 길이가 i+1인 오르막 수 개수를 저장할 배열

    # j: 현재 숫자의 끝자릿수 (0~9)
    # 오르막 수는 이전 숫자보다 같거나 커야 하므로,
    # j로 끝나는 오르막 수는 j 이하의 수들로 끝나는 i자리 오르막 수들의 합
    tmp[0] = dp[0]  # 0으로 끝나는 오르막 수는 이전에도 0으로 끝났던 수만 가능

    for j in range(1, 10):
        # 누적합을 이용해 계산: tmp[j] = dp[0] + dp[1] + ... + dp[j]
        tmp[j] = (tmp[j-1] + dp[j]) % 10007

    dp = tmp  # 다음 길이 계산을 위해 dp 갱신

# 길이가 N인 모든 오르막 수의 합을 구하고, 10007로 나눈 나머지를 출력
answer = sum(dp) % 10007
print(answer)
